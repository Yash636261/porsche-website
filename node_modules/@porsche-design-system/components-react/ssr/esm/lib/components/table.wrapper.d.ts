import { type HTMLAttributes } from 'react';
import type { TableUpdateEventDetail, Theme } from '../types';
export type PTableProps = Omit<HTMLAttributes<{}>, 'color'> & {
    /**
     * A caption describing the contents of the table for accessibility only. This won't be visible in the browser. Use an element with an attribute of `slot="caption"` for a visible caption.
     */
    caption?: string;
    /**
     * @deprecated since v3.0.0, will be removed with next major release, use `update` event instead. Emitted when sorting is changed.
     */
    onSortingChange?: (event: CustomEvent<TableUpdateEventDetail>) => void;
    /**
     * Emitted when sorting is changed.
     */
    onUpdate?: (event: CustomEvent<TableUpdateEventDetail>) => void;
    /**
     * Adapts the color when used on dark background.
     */
    theme?: Theme;
};
export declare const PTable: import("react").ForwardRefExoticComponent<Omit<HTMLAttributes<{}>, "color"> & {
    /**
     * A caption describing the contents of the table for accessibility only. This won't be visible in the browser. Use an element with an attribute of `slot="caption"` for a visible caption.
     */
    caption?: string;
    /**
     * @deprecated since v3.0.0, will be removed with next major release, use `update` event instead. Emitted when sorting is changed.
     */
    onSortingChange?: (event: CustomEvent<TableUpdateEventDetail>) => void;
    /**
     * Emitted when sorting is changed.
     */
    onUpdate?: (event: CustomEvent<TableUpdateEventDetail>) => void;
    /**
     * Adapts the color when used on dark background.
     */
    theme?: Theme;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLElement>>;
